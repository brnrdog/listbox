// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");

function nextIndex(size, selectedIndex, _index) {
  while(true) {
    var index = _index;
    var next = (size - index | 0) === 1 ? 0 : index + 1 | 0;
    if (next !== selectedIndex) {
      return next;
    }
    _index = next;
    continue ;
  };
}

function prevIndex(size, selectedIndex, _index) {
  while(true) {
    var index = _index;
    var prev = index === 0 ? size - 1 | 0 : index - 1 | 0;
    if (prev !== selectedIndex) {
      return prev;
    }
    _index = prev;
    continue ;
  };
}

function useControls(size) {
  var match = React.useState(function () {
        return -1;
      });
  var setHighlightedIndex = match[1];
  var highlightedIndex = match[0];
  var match$1 = React.useState(function () {
        return -1;
      });
  var setSelectedIndex = match$1[1];
  var selectedIndex = match$1[0];
  var highlightFirst = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return 0;
                }));
  };
  var highlightLast = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return size - 1 | 0;
                }));
  };
  var highlightNext = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return nextIndex(size, selectedIndex, param);
                }));
  };
  var highlightPrev = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return prevIndex(size, selectedIndex, param);
                }));
  };
  var selectHighlighted = function (param) {
    return Curry._1(setSelectedIndex, (function (param) {
                  return highlightedIndex;
                }));
  };
  var selectIndex = function (index) {
    return Curry._1(setSelectedIndex, (function (param) {
                  return index;
                }));
  };
  return {
          highlightedIndex: highlightedIndex,
          selectedIndex: selectedIndex,
          highlightFirst: highlightFirst,
          highlightLast: highlightLast,
          highlightNext: highlightNext,
          highlightPrev: highlightPrev,
          selectIndex: selectIndex,
          selectHighlighted: selectHighlighted
        };
}

exports.nextIndex = nextIndex;
exports.prevIndex = prevIndex;
exports.useControls = useControls;
/* react Not a pure module */
