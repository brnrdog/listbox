// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");

function nextIndex(size, index) {
  if ((size - index | 0) === 1) {
    return 0;
  } else {
    return index + 1 | 0;
  }
}

function prevIndex(size, index) {
  if (index === 0) {
    return size - 1 | 0;
  } else {
    return index - 1 | 0;
  }
}

function useControls(size) {
  var match = React.useState(function () {
        return -1;
      });
  var setHighlightedIndex = match[1];
  var highlightedIndex = match[0];
  var match$1 = React.useState(function () {
        return -1;
      });
  var setSelectedIndex = match$1[1];
  var highlightNext = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return nextIndex(size, param);
                }));
  };
  var highlightPrev = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return prevIndex(size, param);
                }));
  };
  var selectHighlighted = function (param) {
    return Curry._1(setSelectedIndex, (function (param) {
                  return highlightedIndex;
                }));
  };
  var highlightFirst = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return 0;
                }));
  };
  var highlightLast = function (param) {
    return Curry._1(setHighlightedIndex, (function (param) {
                  return size - 1 | 0;
                }));
  };
  return {
          highlightedIndex: highlightedIndex,
          selectedIndex: match$1[0],
          highlightFirst: highlightFirst,
          highlightLast: highlightLast,
          highlightNext: highlightNext,
          highlightPrev: highlightPrev,
          selectHighlighted: selectHighlighted
        };
}

exports.nextIndex = nextIndex;
exports.prevIndex = prevIndex;
exports.useControls = useControls;
/* react Not a pure module */
